#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Movie")]
public partial class MovieDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertMovieInfo(MovieInfo instance);
  partial void UpdateMovieInfo(MovieInfo instance);
  partial void DeleteMovieInfo(MovieInfo instance);
  #endregion
	
	public MovieDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MovieConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public MovieDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MovieDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MovieDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MovieDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<MovieInfo> MovieInfo
	{
		get
		{
			return this.GetTable<MovieInfo>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MovieInfo")]
public partial class MovieInfo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _name;
	
	private string _style;
	
	private System.Nullable<double> _grade;
	
	private string _area;
	
	private string _releasetime;
	
	private string _desc;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstyleChanging(string value);
    partial void OnstyleChanged();
    partial void OngradeChanging(System.Nullable<double> value);
    partial void OngradeChanged();
    partial void OnareaChanging(string value);
    partial void OnareaChanged();
    partial void OnreleasetimeChanging(string value);
    partial void OnreleasetimeChanged();
    partial void OndescChanging(string value);
    partial void OndescChanged();
    #endregion
	
	public MovieInfo()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(10)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_style", DbType="NChar(10)")]
	public string style
	{
		get
		{
			return this._style;
		}
		set
		{
			if ((this._style != value))
			{
				this.OnstyleChanging(value);
				this.SendPropertyChanging();
				this._style = value;
				this.SendPropertyChanged("style");
				this.OnstyleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Float")]
	public System.Nullable<double> grade
	{
		get
		{
			return this._grade;
		}
		set
		{
			if ((this._grade != value))
			{
				this.OngradeChanging(value);
				this.SendPropertyChanging();
				this._grade = value;
				this.SendPropertyChanged("grade");
				this.OngradeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area", DbType="NChar(10)")]
	public string area
	{
		get
		{
			return this._area;
		}
		set
		{
			if ((this._area != value))
			{
				this.OnareaChanging(value);
				this.SendPropertyChanging();
				this._area = value;
				this.SendPropertyChanged("area");
				this.OnareaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_releasetime", DbType="NChar(10)")]
	public string releasetime
	{
		get
		{
			return this._releasetime;
		}
		set
		{
			if ((this._releasetime != value))
			{
				this.OnreleasetimeChanging(value);
				this.SendPropertyChanging();
				this._releasetime = value;
				this.SendPropertyChanged("releasetime");
				this.OnreleasetimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[desc]", Storage="_desc", DbType="NVarChar(MAX)")]
	public string desc
	{
		get
		{
			return this._desc;
		}
		set
		{
			if ((this._desc != value))
			{
				this.OndescChanging(value);
				this.SendPropertyChanging();
				this._desc = value;
				this.SendPropertyChanged("desc");
				this.OndescChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
